/*----Colors -----*/
@brand-color: #15ABB1;
@sidebar-color: #117683;

@brand-complement1: spin(@brand-color, 180);
@brand-complement2: darken(spin(@brand-color, 180), 5%);
@brand-lighten1: lighten(@brand-color, 15%);
@brand-lighten2: lighten(@brand-color, 30%);

@navbar-color: @brand-color;
@navbar-text-color: #fff;
@navbar-hover-color: lighten(@brand-color, 25%);

@navbar-dropdown-link-hover: darken(@brand-color,2.5%);
@navbar-dropdown-color: darken(@brand-color,5%);

@ground-color: #efefef;
@main-background-color: #fff;

@header-font: 'Frente';
@default-font: 'RobotoCn';
@paragraph-font: 'RobotoCn';

/*--- More colors! ----*/
@baseColor: @brand-color;

// Shades
@difference: 10%; // Difference (in perecent) between each shade
@shade1: lighten(@baseColor, (@difference * 2));
@shade2: lighten(@baseColor, @difference);
@shade3: @baseColor;
@shade4: darken(@baseColor, @difference);
@shade5: darken(@baseColor, (@difference * 2));

// Analgous
@distance1: 10; // Degrees between each analogous color
@analogous1: spin(@baseColor, (@distance1 * 2));
@analogous2: spin(@baseColor, @distance1);
@analogous3: @baseColor;
@analogous4: spin(@baseColor, (@distance1 * -1));
@analogous5: spin(@baseColor, (@distance1 * -2));

// Complementary
@complementary1: @baseColor;
@complementary2: spin(@baseColor, 180);

// Split Complementary
@distance2: 80; // Degrees between the two complementary colors
@splitComp1: spin(@baseColor, ((360 - @distance2) / 2));
@splitComp2: @baseColor;
@splitComp3: spin(@baseColor, (((360 - @distance2) / 2) * -1));

// Clash
@angle: 45; // Angle formed at base of isosceles triangle
@clash1: spin(@baseColor, (@angle * -2));
@clash2: @baseColor;
@clash3: spin(@baseColor, (@angle * 2));

// Triadic
@distance3: 120; // Degrees between the two new colors
@triad1: @baseColor;
@triad2: spin(@baseColor, (180 - (@distance3 * 0.5)));
@triad3: spin(@baseColor, (180 + (@distance3 * 0.5)));

// Tetradic
@distance4: 90; // Degrees between two closest colors
@tetrad1: @baseColor;
@tetrad2: spin(@baseColor, @distance4);
@tetrad3: spin(@baseColor, 180);
@tetrad4: spin(@baseColor, (180 + @distance4));

// Five tone
@distance5: 30; // Degrees between the 4 analogous colors
@5tone1: @baseColor;
@5tone2: spin(@baseColor, (180 - (@distance5 * 1.5)));
@5tone3: spin(@baseColor, (180 - (@distance5 * 0.5)));
@5tone4: spin(@baseColor, (180 + (@distance5 * 0.5)));
@5tone5: spin(@baseColor, (180 + (@distance5 * 1.5)));

// Six tone
@distance6: 20; // Distance between the colors of each analogous pair
// Pair 1
@6tone1: @baseColor;
@6tone2: spin(@baseColor, @distance6);
// Pair 2
@6tone3: spin(@baseColor, (120 - (@distance6 * 0.5)));
@6tone4: spin(@baseColor, (120 + (@distance6 * 0.5)));
// Pair 3
@6tone5: spin(@baseColor, (-120 + (@distance6 * 0.5)));
@6tone6: spin(@baseColor, (-120 - (@distance6 * 0.5)));

/*-----Mixins -----*/
.appearance(){
	-webkit-appearance:none;
    -moz-appearance:none;
    appearance:none;
}
.borderradius(@rad){
	border-radius: @rad;
	-moz-border-radius: @rad;
	-webkit-border-radius: @rad;
}
.opacity(@opac){
  -ms-filter: ~"progid:DXImageTransform.Microsoft.Alpha(Opacity=@{opac})";
  filter: alpha(opacity=50);
  opacity: 0.5;
}
.rotate(@deg){
	-webkit-transform:rotate(@deg);
    -moz-transform:rotate(@deg);
    -ms-transform:rotate(@deg);
    transform:rotate(@deg);
}
.flex(){
	display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;
    align-items:stretch;
}
.gradient (@origin: left, @start: #ffffff, @stop: #000000) {
    background-color: @start;
    background-image: -webkit-linear-gradient(@origin, @start, @stop);
    background-image: -moz-linear-gradient(@origin, @start, @stop);
    background-image: -o-linear-gradient(@origin, @start, @stop);
    background-image: -ms-linear-gradient(@origin, @start, @stop);
    background-image: linear-gradient(@origin, @start, @stop);
}
.transition (@prop: all, @time: 1s, @ease: linear) {
    -webkit-transition: @prop @time @ease;
    -moz-transition: @prop @time @ease;
    -o-transition: @prop @time @ease;
    -ms-transition: @prop @time @ease;
    transition: @prop @time @ease;
}
.transform (@rotate: 90deg, @scale: 1, @skew: 1deg, @translate: 10px) {
    -webkit-transform: rotate(@rotate) scale(@scale) skew(@skew) translate(@translate);
    -moz-transform: rotate(@rotate) scale(@scale) skew(@skew) translate(@translate);
    -o-transform: rotate(@rotate) scale(@scale) skew(@skew) translate(@translate);
    -ms-transform: rotate(@rotate) scale(@scale) skew(@skew) translate(@translate);
    transform: rotate(@rotate) scale(@scale) skew(@skew) translate(@translate);
}
 